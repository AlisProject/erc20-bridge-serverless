version: 2.1

references:
    setup_remote_docker: &setup_remote_docker
      setup_remote_docker:
        version: 18.09.3

jobs:
  build:

    docker:
      - image: circleci/python:3.7
      - image: bluszcz/bflocalstack-dynamodb-s3
      - image: alismedia/dynamodb-local
        environment:
          MAX_HEAP_SIZE: 2048m
          HEAP_NEWSIZE: 512m

    working_directory: ~/repo

    steps:
      - checkout
      - <<: *setup_remote_docker
      - restore_cache:
          keys:
          - v3-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "requirements_test.txt" }}
          - v3-dependencies-{{ checksum "yarn.lock" }}
          - v3-dependencies-

      - run:
          name: Setup yarn
          command: |
            curl -sSL "https://nodejs.org/dist/v10.11.0/node-v10.11.0-linux-x64.tar.xz" | sudo tar --strip-components=2 -xJ -C /usr/local/bin/ node-v10.11.0-linux-x64/bin/node
            curl https://www.npmjs.com/install.sh | sudo bash
            sudo npm install -g yarn@1.15.2

      - run:
          name: Install Node dependencies
          command: |
            yarn install --frozen-lockfile

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
            pip install -r requirements_test.txt

      - save_cache:
          paths:
            - ./venv
          key: v3-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "requirements_test.txt" }}

      - save_cache:
          name: Save cache yarn
          paths:
            - ./node_modules
          key: v3-dependencies-{{ checksum "yarn.lock" }}

      - run:
          name: run checkstyle for python code
          command: |
            . venv/bin/activate
            pycodestyle src tests

      - run:
          name: run pyflakes for python code
          command: |
            . venv/bin/activate
            pyflakes src tests

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            yarn test

#      - run:
#          name: make deploy package
#          command: |
#            if [ $ALIS_APP_ID ]; then
#              docker image build --tag deploy-image .
#              docker container run -it --name deploy-container deploy-image
#              docker container cp deploy-container:/workdir/vendor-package .
#              . venv/bin/activate
#              python make_deploy_zip.py
#            fi
#
#      - run:
#          name: run deploy
#          command: |
#            if [ $ALIS_APP_ID ]; then
#              . venv/bin/activate
#              ./deploy_api.sh
#            fi
